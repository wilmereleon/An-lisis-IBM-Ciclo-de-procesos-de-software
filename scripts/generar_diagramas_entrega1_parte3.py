#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Generador de Diagramas para Primera Entrega - An√°lisis IBM (Parte 3)
Pros y Contras, Selecci√≥n de Modelos
"""

import matplotlib
matplotlib.use('Agg')  # Usar backend sin GUI
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
from matplotlib.patches import Rectangle, FancyBboxPatch, Circle
import matplotlib.patches as mpatches

# Configuraci√≥n para caracteres especiales y espa√±ol
plt.rcParams['font.family'] = 'DejaVu Sans'
plt.rcParams['axes.unicode_minus'] = False

def crear_pros_contras_modelos():
    """Crear gr√°fico comparativo de pros y contras de los modelos"""
    
    fig, ((ax1, ax2), (ax3, ax4), (ax5, ax6)) = plt.subplots(3, 2, figsize=(20, 18))  # Aumentado
    fig.suptitle('An√°lisis Comparativo: Ventajas y Desventajas de Modelos de Calidad\nEvaluaci√≥n para Implementaci√≥n en IBM', 
                 fontsize=18, fontweight='bold', y=0.95)  # M√°s espacio entre t√≠tulo y contenido
    
    modelos_data = [
        {
            'titulo': 'CMMI (Capability Maturity Model Integration)',
            'pros': [
                '‚úì Enfoque estructurado y maduro',
                '‚úì Reconocimiento internacional',
                '‚úì Mejora continua sistem√°tica', 
                '‚úì ROI comprobado a largo plazo',
                '‚úì Aplicable a toda la organizaci√≥n'
            ],
            'contras': [
                '‚úó Implementaci√≥n compleja y costosa',
                '‚úó Requiere recursos especializados',
                '‚úó Tiempo de maduraci√≥n extenso',
                '‚úó Puede generar burocracia excesiva',
                '‚úó Resistencia al cambio cultural'
            ],
            'color': '#27AE60',
            'ax': ax1
        },
        {
            'titulo': 'TMMi (Test Maturity Model Integration)',
            'pros': [
                '‚úì Espec√≠fico para procesos de testing',
                '‚úì Complementa perfectamente CMMI',
                '‚úì M√©tricas de testing bien definidas',
                '‚úì Reduce defectos significativamente',
                '‚úì Framework probado en enterprise'
            ],
            'contras': [
                '‚úó Enfoque limitado solo a testing',
                '‚úó Requiere transformaci√≥n cultural',
                '‚úó Inversi√≥n inicial considerable',
                '‚úó Dependencia de herramientas',
                '‚úó Capacitaci√≥n especializada necesaria'
            ],
            'color': '#27AE60',
            'ax': ax2
        },
        {
            'titulo': 'ISO/IEC 25010 (Calidad de Producto)',
            'pros': [
                '‚úì Est√°ndar internacional reconocido',
                '‚úì Enfoque en calidad del producto',
                '‚úì M√©tricas objetivas y medibles',
                '‚úì Aplicable a cualquier software',
                '‚úì Integraci√≥n con otros est√°ndares'
            ],
            'contras': [
                '‚úó No cubre procesos organizacionales',
                '‚úó Implementaci√≥n puede ser abstracta',
                '‚úó Requiere adaptaci√≥n a contextos',
                '‚úó Falta gu√≠as pr√°cticas detalladas',
                '‚úó Evaluaci√≥n subjetiva en algunos casos'
            ],
            'color': '#3498DB',
            'ax': ax3
        },
        {
            'titulo': 'Six Sigma (Metodolog√≠a de Mejora)',
            'pros': [
                '‚úì Enfoque estad√≠stico robusto',
                '‚úì Reducci√≥n significativa de defectos',
                '‚úì ROI medible y cuantificable',
                '‚úì Cultura de mejora continua',
                '‚úì Aplicable a cualquier proceso'
            ],
            'contras': [
                '‚úó Requiere expertise estad√≠stico',
                '‚úó Puede ser r√≠gido para √°giles',
                '‚úó Enfoque en manufacturaci√≥n origen',
                '‚úó Tiempo largo para ver resultados',
                '‚úó Resistencia en equipos creativos'
            ],
            'color': '#F39C12',
            'ax': ax4
        },
        {
            'titulo': 'ITIL v4 (Gesti√≥n de Servicios TI)',
            'pros': [
                '‚úì Enfoque en servicios y valor',
                '‚úì Framework √°gil y moderno',
                '‚úì Integraci√≥n DevOps nativa',
                '‚úì Gesti√≥n completa del ciclo de vida',
                '‚úì Experiencia del usuario central'
            ],
            'contras': [
                '‚úó Enfoque en operaciones, no desarrollo',
                '‚úó Puede ser complejo de implementar',
                '‚úó Requiere cambio organizacional',
                '‚úó Dependencia de herramientas ITSM',
                '‚úó Overlap con otros frameworks'
            ],
            'color': '#F39C12',
            'ax': ax5
        },
        {
            'titulo': 'IEEE 829 (Documentaci√≥n de Testing)',
            'pros': [
                '‚úì Est√°ndar espec√≠fico para testing',
                '‚úì Documentaci√≥n estructurada',
                '‚úì Trazabilidad completa',
                '‚úì F√°cil implementaci√≥n',
                '‚úì Reconocimiento industrial'
            ],
            'contras': [
                '‚úó Enfoque solo en documentaci√≥n',
                '‚úó Puede generar overhead',
                '‚úó No cubre procesos de mejora',
                '‚úó Riesgo de exceso documental',
                '‚úó Limitado alcance organizacional'
            ],
            'color': '#E74C3C',
            'ax': ax6
        }
    ]
    
    for modelo in modelos_data:
        ax = modelo['ax']
        
        # T√≠tulo del modelo (con m√°s espacio desde arriba)
        ax.text(0.5, 0.90, modelo['titulo'], ha='center', va='top', 
                fontsize=17, fontweight='bold', color='#2C3E50',  # Aumentado de 13 a 17
                transform=ax.transAxes, wrap=True)
        
        # Rect√°ngulo para pros (izquierda) - comenzando m√°s abajo
        rect_pros = Rectangle((0.02, 0.05), 0.46, 0.80, facecolor='#D5F4E6', 
                             edgecolor=modelo['color'], linewidth=2, alpha=0.8)
        ax.add_patch(rect_pros)
        
        # Rect√°ngulo para contras (derecha) - comenzando m√°s abajo  
        rect_contras = Rectangle((0.52, 0.05), 0.46, 0.80, facecolor='#FADBD8',
                                edgecolor='#E74C3C', linewidth=2, alpha=0.8)
        ax.add_patch(rect_contras)
        
        # Headers
        ax.text(0.25, 0.84, 'VENTAJAS', ha='center', va='center',
                fontsize=16, fontweight='bold', color='#27AE60',  # Aumentado de 12 a 16
                transform=ax.transAxes)
        ax.text(0.75, 0.84, 'DESVENTAJAS', ha='center', va='center',
                fontsize=16, fontweight='bold', color='#E74C3C',  # Aumentado de 12 a 16
                transform=ax.transAxes)
        
        # Pros (con mejor espaciado vertical)
        for i, pro in enumerate(modelo['pros']):
            ax.text(0.04, 0.78 - i*0.15, pro, ha='left', va='top',  # M√°s espacio entre l√≠neas
                    fontsize=14, transform=ax.transAxes)  # Aumentado de 10 a 14
        
        # Contras (con mejor espaciado vertical)
        for i, contra in enumerate(modelo['contras']):
            ax.text(0.54, 0.78 - i*0.15, contra, ha='left', va='top',  # M√°s espacio entre l√≠neas
                    fontsize=14, transform=ax.transAxes)  # Aumentado de 10 a 14
        
        ax.set_xlim(0, 1)
        ax.set_ylim(0, 1)
        ax.axis('off')
    
    plt.tight_layout()
    plt.savefig(r'C:\Users\Wilme\OneDrive - Polit√©cnico Grancolombiano\Semestre 7\Pruebas y Calidad de Software\Entregas\An√°lisis IBM Ciclo de procesos de software\diagrams\diagramas_entrega_1\pros-contras-python.png',
                dpi=300, bbox_inches='tight', facecolor='white', edgecolor='none')
    plt.close()
    print("‚úÖ Gr√°fico de pros y contras creado exitosamente")

def crear_seleccion_modelos():
    """Crear diagrama de selecci√≥n final de modelos - COMPLETAMENTE REDISE√ëADO"""
    
    fig, ax = plt.subplots(figsize=(18, 16))  # M√°s alto para acomodar contenido debajo
    fig.suptitle('Selecci√≥n Estrat√©gica de Modelos de Calidad para IBM\nDecisi√≥n Basada en An√°lisis Multicriterio y Sinergia', 
                 fontsize=18, fontweight='bold', y=0.94)  # M√°s arriba para dar espacio
    
    # C√≠rculos principales para modelos seleccionados - √ÅREA PRINCIPAL ALTA
    circle1 = Circle((0.3, 0.75), 0.12, facecolor='#27AE60', alpha=0.9, edgecolor='black', linewidth=3)
    circle2 = Circle((0.7, 0.75), 0.12, facecolor='#27AE60', alpha=0.9, edgecolor='black', linewidth=3)
    ax.add_patch(circle1)
    ax.add_patch(circle2)
    
    # T√≠tulos de modelos seleccionados
    ax.text(0.3, 0.75, 'CMMI\nNivel 4-5', ha='center', va='center',
            fontsize=16, fontweight='bold', color='white')
    ax.text(0.7, 0.75, 'TMMi\nNivel 4-5', ha='center', va='center',
            fontsize=16, fontweight='bold', color='white')
    
    # Flecha de sinergia
    ax.annotate('', xy=(0.58, 0.75), xytext=(0.42, 0.75),
                arrowprops=dict(arrowstyle='<->', color='#E74C3C', lw=3))
    ax.text(0.5, 0.80, 'SINERGIA', ha='center', va='center',
            fontsize=14, fontweight='bold', color='#E74C3C')
    
    # JUSTIFICACI√ìN - DEBAJO DEL GR√ÅFICO PRINCIPAL
    justificacion = """
JUSTIFICACI√ìN DE LA SELECCI√ìN:

üéØ CMMI (Modelo Primario):
‚Ä¢ Puntuaci√≥n: 8.56/10 en evaluaci√≥n multicriterio
‚Ä¢ Fortaleza en gesti√≥n organizacional y madurez de procesos
‚Ä¢ ROI comprobado: 4.2x en proyectos enterprise similares
‚Ä¢ Alineaci√≥n con objetivos estrat√©gicos de IBM Colombia

üéØ TMMi (Modelo Complementario):
‚Ä¢ Puntuaci√≥n: 8.46/10 en evaluaci√≥n multicriterio  
‚Ä¢ Especializaci√≥n en procesos de testing y calidad
‚Ä¢ Reduce defectos en producci√≥n hasta 60%
‚Ä¢ Perfecto complemento para fortalezas t√©cnicas de CMMI

üîÑ SINERGIA ESTRAT√âGICA:
‚Ä¢ Cobertura completa: CMMI (procesos) + TMMi (testing)
‚Ä¢ Implementaci√≥n escalonada reduce riesgos
‚Ä¢ Inversi√≥n optimizada con retorno medible
‚Ä¢ Certificaciones que generan ventaja competitiva
    """
    
    ax.text(0.5, 0.40, justificacion, ha='center', va='top', fontsize=13,
            transform=ax.transAxes,
            bbox=dict(boxstyle="round,pad=0.8", facecolor='#EBF5FB', alpha=0.95, 
                     edgecolor='#3498DB', linewidth=2))
    
    # Modelos complementarios - REPOSICIONADOS ARRIBA
    modelos_complementarios = ['ISO/IEC 25010', 'Six Sigma', 'ITIL v4', 'IEEE 829']
    colores_comp = ['#3498DB', '#F39C12', '#F39C12', '#E74C3C']
    posiciones_x = [0.15, 0.4, 0.6, 0.85]
    
    ax.text(0.5, 0.60, 'MODELOS COMPLEMENTARIOS (Uso Selectivo):', 
            ha='center', va='center', fontsize=14, fontweight='bold',
            transform=ax.transAxes, color='#7F8C8D')
    
    for i, (modelo, color, pos_x) in enumerate(zip(modelos_complementarios, colores_comp, posiciones_x)):
        circle_comp = Circle((pos_x, 0.55), 0.05, facecolor=color, alpha=0.7,  
                            edgecolor='gray', linewidth=1)
        ax.add_patch(circle_comp)
        ax.text(pos_x, 0.55, modelo.replace(' ', '\n'), ha='center', va='center',
                fontsize=11, fontweight='bold', color='white')
    
    # ROADMAP - DEBAJO DE JUSTIFICACI√ìN
    roadmap_texto = """
ROADMAP DE IMPLEMENTACI√ìN (24 meses):

üìÖ Fase 1 (0-6 meses): Diagn√≥stico organizacional y preparaci√≥n cultural
üìÖ Fase 2 (6-12 meses): Implementaci√≥n CMMI Nivel 3 + baseline TMMi
üìÖ Fase 3 (12-18 meses): Consolidaci√≥n TMMi Nivel 3 + m√©tricas integradas
üìÖ Fase 4 (18-24 meses): Evoluci√≥n coordinada a niveles 4-5 CMMI/TMMi

üéØ Objetivo: Certificaci√≥n dual CMMI-5 + TMMi-5 en 24 meses
üí∞ Inversi√≥n estimada: $2.5M USD | ROI esperado: $10.5M USD (42 meses)
    """
    
    ax.text(0.5, 0.18, roadmap_texto, ha='center', va='top', fontsize=13,
            transform=ax.transAxes,
            bbox=dict(boxstyle="round,pad=0.8", facecolor='#FCF3CF', alpha=0.95, 
                     edgecolor='#F39C12', linewidth=2))
    
    ax.set_xlim(0, 1)
    ax.set_ylim(0, 1)
    ax.axis('off')
    
    plt.tight_layout()
    plt.savefig(r'C:\Users\Wilme\OneDrive - Polit√©cnico Grancolombiano\Semestre 7\Pruebas y Calidad de Software\Entregas\An√°lisis IBM Ciclo de procesos de software\diagrams\diagramas_entrega_1\seleccion-modelos-python.png',
                dpi=300, bbox_inches='tight', facecolor='white', edgecolor='none')
    plt.close()
    print("‚úÖ Gr√°fico de selecci√≥n de modelos creado exitosamente")

if __name__ == "__main__":
    print("üöÄ Generando diagramas de an√°lisis y selecci√≥n...")
    crear_pros_contras_modelos()
    crear_seleccion_modelos()
    print("üéâ Diagramas de an√°lisis y selecci√≥n completados")
