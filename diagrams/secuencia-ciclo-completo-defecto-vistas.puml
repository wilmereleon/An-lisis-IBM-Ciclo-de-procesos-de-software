@startuml secuencia-ciclo-completo-defecto-vistas
!theme cerulean-outline
title Secuencia del Ciclo Completo de un Defecto - Vistas por Rol

' Definir participantes
actor "QA Tester üß™" as Tester #0f62fe
participant "Vista Tester" as TesterView #lightblue
participant "Sistema de\nAsignaci√≥n" as AssignmentSystem #lightgray
participant "Vista Desarrollador" as DeveloperView #lightgreen
actor "Desarrollador üë®‚Äçüíª" as Developer #24a148
participant "Vista Project Manager" as ManagerView #lightpink
actor "Project Manager üë®‚Äçüíº" as Manager #6f267d
database "Base de Datos" as Database #lightyellow
participant "Sistema de\nNotificaciones" as NotificationSystem #lightcoral

' Activaci√≥n de lifelines
activate TesterView
activate AssignmentSystem
activate DeveloperView
activate ManagerView
activate Database
activate NotificationSystem

== Fase 1: Descubrimiento y Reporte ==

Tester -> TesterView : 1. Accede a Vista Tester
note right : Usuario hace clic en\ncard "Vista Tester üß™"\ndesde dashboard principal

TesterView -> TesterView : 2. Carga dashboard personal\ny acciones r√°pidas
note right : ‚Ä¢ Estad√≠sticas personales\n‚Ä¢ Defectos pendientes verificaci√≥n\n‚Ä¢ Acciones r√°pidas disponibles

Tester -> TesterView : 3. Click "Reportar Defecto"
TesterView -> TesterView : 4. Abre formulario especializado
note right : Formulario optimizado\npara QA con campos:\n‚Ä¢ Pasos reproducci√≥n\n‚Ä¢ Evidencias\n‚Ä¢ Clasificaci√≥n

Tester -> TesterView : 5. Completa informaci√≥n del defecto
note right : ‚Ä¢ T√≠tulo descriptivo\n‚Ä¢ Descripci√≥n t√©cnica\n‚Ä¢ Pasos numerados\n‚Ä¢ Screenshots/logs\n‚Ä¢ Severidad y prioridad

TesterView -> Database : 6. Guarda defecto con estado "Nuevo"
Database -> AssignmentSystem : 7. Trigger: Nuevo defecto creado

== Fase 2: Asignaci√≥n Autom√°tica ==

AssignmentSystem -> AssignmentSystem : 8. Analiza carga de equipo\ny expertise
note right : Algoritmo considera:\n‚Ä¢ Carga actual desarrolladores\n‚Ä¢ Expertise en m√≥dulo\n‚Ä¢ Prioridad del defecto\n‚Ä¢ Disponibilidad

AssignmentSystem -> Database : 9. Asigna defecto a desarrollador
AssignmentSystem -> NotificationSystem : 10. Env√≠a notificaci√≥n de asignaci√≥n

NotificationSystem -> Developer : 11. Notifica nuevo defecto asignado
note right : ‚Ä¢ Email notification\n‚Ä¢ Dashboard alert\n‚Ä¢ Slack/Teams message

== Fase 3: Monitoreo Ejecutivo ==

Database -> ManagerView : 12. Actualiza m√©tricas en tiempo real
ManagerView -> Manager : 13. Muestra alerta si es cr√≠tico
note right : Alertas autom√°ticas para:\n‚Ä¢ Defectos cr√≠ticos\n‚Ä¢ SLA en riesgo\n‚Ä¢ Equipos sobrecargados

Manager -> ManagerView : 14. Revisa KPIs y tendencias
ManagerView -> ManagerView : 15. Actualiza dashboard ejecutivo
note right : ‚Ä¢ Total defectos abiertos\n‚Ä¢ Tiempo promedio resoluci√≥n\n‚Ä¢ Performance del equipo\n‚Ä¢ Cumplimiento SLA

== Fase 4: Resoluci√≥n por Desarrollador ==

Developer -> DeveloperView : 16. Accede a Vista Desarrollador
DeveloperView -> Database : 17. Consulta defectos asignados
Database -> DeveloperView : 18. Retorna cola de trabajo priorizada

DeveloperView -> Developer : 19. Muestra colas: Alta Prioridad y Regular
note right : Interface optimizada con:\n‚Ä¢ Detalles t√©cnicos\n‚Ä¢ Estimaci√≥n esfuerzo\n‚Ä¢ Historial cambios\n‚Ä¢ Enlaces c√≥digo

Developer -> DeveloperView : 20. Selecciona defecto y click "Tomar"
DeveloperView -> Database : 21. Actualiza estado a "En Progreso"
Database -> ManagerView : 22. Actualiza m√©tricas tiempo real

Developer -> DeveloperView : 23. An√°liza informaci√≥n t√©cnica
note right : ‚Ä¢ Pasos reproducci√≥n\n‚Ä¢ Logs y evidencias\n‚Ä¢ C√≥digo relacionado\n‚Ä¢ Historial previo

Developer -> DeveloperView : 24. Implementa soluci√≥n
note right : Desarrollador trabaja\nen fix del defecto\nfuera del sistema

Developer -> DeveloperView : 25. Actualiza defecto a "Resuelto"
DeveloperView -> Database : 26. Guarda resoluci√≥n con comentarios
Database -> NotificationSystem : 27. Trigger: Defecto resuelto

== Fase 5: Verificaci√≥n por Tester ==

NotificationSystem -> Tester : 28. Notifica defecto resuelto para verificaci√≥n
Tester -> TesterView : 29. Accede a secci√≥n "Pendientes Verificaci√≥n"
TesterView -> Database : 30. Consulta defectos para verificar
Database -> TesterView : 31. Retorna lista con detalles de resoluci√≥n

TesterView -> Tester : 32. Muestra defecto con checklist verificaci√≥n
note right : Checklist incluye:\n‚Ä¢ Defecto no se reproduce\n‚Ä¢ No hay regresiones\n‚Ä¢ Documentaci√≥n actualizada

Tester -> TesterView : 33. Ejecuta pasos de verificaci√≥n
TesterView -> TesterView : 34. Tester marca checklist items

alt Verificaci√≥n Exitosa
    Tester -> TesterView : 35a. Marca como "Verificado"
    TesterView -> Database : 36a. Actualiza estado a "Cerrado"
    Database -> NotificationSystem : 37a. Notifica cierre exitoso
    NotificationSystem -> Developer : 38a. Confirmaci√≥n de cierre
    Database -> ManagerView : 39a. Actualiza m√©tricas de cierre
else Verificaci√≥n Fallida
    Tester -> TesterView : 35b. Marca como "Rechazado" con comentarios
    TesterView -> Database : 36b. Regresa estado a "Asignado"
    Database -> NotificationSystem : 37b. Notifica rechazo
    NotificationSystem -> Developer : 38b. Defecto rechazado, revisar
    Database -> ManagerView : 39b. Actualiza m√©tricas de rechazo
end

== Fase 6: An√°lisis y Seguimiento ==

Database -> ManagerView : 40. Actualiza todas las m√©tricas finales
ManagerView -> Manager : 41. Genera insights autom√°ticos
note right : ‚Ä¢ Tiempo total resoluci√≥n\n‚Ä¢ Calidad del fix\n‚Ä¢ Performance del equipo\n‚Ä¢ Tendencias de mejora

Manager -> ManagerView : 42. Revisa m√©tricas de cierre
ManagerView -> ManagerView : 43. Actualiza dashboard con nueva data
note right : ‚Ä¢ KPIs actualizados\n‚Ä¢ Tendencias recalculadas\n‚Ä¢ Alertas reevaluadas\n‚Ä¢ Performance del equipo

== Mejora Continua ==

ManagerView -> Manager : 44. Identifica oportunidades de mejora
note right : Basado en an√°lisis:\n‚Ä¢ Tiempos de resoluci√≥n\n‚Ä¢ Patrones de defectos\n‚Ä¢ Carga de trabajo\n‚Ä¢ Calidad de fixes

Manager -> ManagerView : 45. Planifica acciones correctivas
note right : ‚Ä¢ Redistribuci√≥n carga\n‚Ä¢ Capacitaci√≥n espec√≠fica\n‚Ä¢ Mejoras en proceso\n‚Ä¢ Ajuste de recursos

' Notas de integraci√≥n
note over TesterView, ManagerView : **Sincronizaci√≥n en Tiempo Real**\nTodas las vistas se actualizan autom√°ticamente\ngracias a WebSocket y arquitectura reactiva

note over Database : **Trazabilidad Completa**\nCada acci√≥n queda registrada con:\n‚Ä¢ Timestamp\n‚Ä¢ Usuario responsable\n‚Ä¢ Estado anterior y nuevo\n‚Ä¢ Comentarios y evidencias

note over NotificationSystem : **Comunicaci√≥n Multicanal**\n‚Ä¢ Notificaciones in-app\n‚Ä¢ Emails autom√°ticos\n‚Ä¢ Integraci√≥n Slack/Teams\n‚Ä¢ Dashboard alerts

deactivate TesterView
deactivate AssignmentSystem
deactivate DeveloperView
deactivate ManagerView
deactivate Database
deactivate NotificationSystem

@enduml